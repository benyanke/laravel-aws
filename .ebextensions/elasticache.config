#This sample requires you to create a separate configuration file that defines the custom option settings for CacheCluster properties.

Resources:
  MyElastiCache:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      CacheNodeType:
         Fn::GetOptionSetting:
             OptionName : CacheNodeType
             DefaultValue: cache.t2.micro
      NumCacheNodes:
           Fn::GetOptionSetting:
             OptionName : NumCacheNodes
             DefaultValue: 1
      Engine:
           Fn::GetOptionSetting:
             OptionName : Engine
             DefaultValue: memcached
      CacheSecurityGroupNames:
        - Ref: MyCacheSecurityGroup
  MyCacheSecurityGroup:
    Type: AWS::ElastiCache::SecurityGroup
    Properties:
      Description: "Lock cache down to webserver access only"
  MyCacheSecurityGroupIngress:
    Type: AWS::ElastiCache::SecurityGroupIngress
    Properties:
      CacheSecurityGroupName:
        Ref: MyCacheSecurityGroup
      EC2SecurityGroupName:
        Ref: AWSEBSecurityGroup
Outputs:
  ElastiCacheAddress:
    Description : "Address of elasticache servers"
    Value : {"Fn::GetAtt": [ "MyElastiCache", "ConfigurationEndpoint.Address"]}
  ElastiCachePort:
    Description : "Port of elasticache servers"
    Value : {"Fn::GetAtt": [ "MyElastiCache", "ConfigurationEndpoint.Port"]}
option_settings:
    "aws:elasticbeanstalk:customoption":
        # Note! Currently, you can use Fn::GetAtt only with Memcached cache clusters.
        ELASTICACHE_CLUSTER_ADDRESS: { "Ref": "ElastiCacheAddress" }
        ELASTICACHE_CLUSTER_PORT: { "Ref": "ElastiCachePort" }